<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>解决Windows无法完成请求的更改</title>
    <link href="/2024/10/16/%E8%A7%A3%E5%86%B3Windows%E6%97%A0%E6%B3%95%E5%AE%8C%E6%88%90%E8%AF%B7%E6%B1%82%E7%9A%84%E6%9B%B4%E6%94%B9/"/>
    <url>/2024/10/16/%E8%A7%A3%E5%86%B3Windows%E6%97%A0%E6%B3%95%E5%AE%8C%E6%88%90%E8%AF%B7%E6%B1%82%E7%9A%84%E6%9B%B4%E6%94%B9/</url>
    
    <content type="html"><![CDATA[<center><h1>解决Windows无法完成请求的更改</h1></center><div class="note note-info">            <p>在安装.net framework 3.5报错</p><p>Windous 无法完成请求的更改<br>无法完成更改。请重新启动你的计算机，然后再试一次<br>错误代码：0xB0240438</p>          </div><p><img src="/img/bug/Windows/%E6%97%A0%E6%B3%95%E5%AE%8C%E6%88%90%E6%9B%B4%E6%94%B9.jpg"></p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><h2 id="1、打开注册表"><a href="#1、打开注册表" class="headerlink" title="1、打开注册表"></a>1、打开注册表</h2><p>windows键+R键<br>输入regedit，回车，会自动打开注册表<br><img src="/img/bug/Windows/%E6%B3%A8%E5%86%8C%E8%A1%A8.png"></p><h2 id="2、更改注册表配置"><a href="#2、更改注册表配置" class="headerlink" title="2、更改注册表配置"></a>2、更改注册表配置</h2><p>更改下边目录下的“UseWUServer”配置文件，打开更改为“0”（PS：有些电脑没有AU目录和UseWUServer文件，自己新建即可）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU<br></code></pre></td></tr></table></figure><p><img src="/img/bug/Windows/%E6%9B%B4%E6%94%B9%E6%B3%A8%E5%86%8C%E8%A1%A8.png"><br><img src="/img/bug/Windows/UseWUServer.png"></p><h2 id="3、打开服务列表，重启Windows-Update-service（无效重启电脑再重新打开服务）"><a href="#3、打开服务列表，重启Windows-Update-service（无效重启电脑再重新打开服务）" class="headerlink" title="3、打开服务列表，重启Windows Update service（无效重启电脑再重新打开服务）"></a>3、打开服务列表，重启Windows Update service（无效重启电脑再重新打开服务）</h2><p><img src="/img/bug/Windows/windows_update%E6%9C%8D%E5%8A%A1.png"></p><hr><h1 id="此时可以正常安装-net-framework-3-5"><a href="#此时可以正常安装-net-framework-3-5" class="headerlink" title="此时可以正常安装.net framework 3.5"></a>此时可以正常安装.net framework 3.5</h1>]]></content>
    
    
    <categories>
      
      <category>Bug</category>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用bat设置电脑自动关机</title>
    <link href="/2024/10/14/%E4%BD%BF%E7%94%A8bat%E8%AE%BE%E7%BD%AE%E7%94%B5%E8%84%91%E8%87%AA%E5%8A%A8%E5%85%B3%E6%9C%BA/"/>
    <url>/2024/10/14/%E4%BD%BF%E7%94%A8bat%E8%AE%BE%E7%BD%AE%E7%94%B5%E8%84%91%E8%87%AA%E5%8A%A8%E5%85%B3%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<center><h1>使用bat设置电脑自动关机</h1></center><div class="note note-info">            <p>今天在办公室有个需求，办公司的公共电脑使用完，下班后，常常有人忘记关机<br>就突然想要用bat做个自动关机的文件</p>          </div><h1 id="运行程序下载"><a href="#运行程序下载" class="headerlink" title="运行程序下载"></a>运行程序下载</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">https:<span class="hljs-comment">//wwuk.lanzouo.com/b0nyj08hc</span><br>密码:<span class="hljs-number">2</span>hg7<br></code></pre></td></tr></table></figure><h1 id="一、bat文件实现"><a href="#一、bat文件实现" class="headerlink" title="一、bat文件实现"></a>一、bat文件实现</h1><h2 id="1、简单了解bat文件"><a href="#1、简单了解bat文件" class="headerlink" title="1、简单了解bat文件"></a>1、简单了解bat文件</h2><h3 id="1）什么是bat文件？"><a href="#1）什么是bat文件？" class="headerlink" title="1）什么是bat文件？"></a>1）什么是bat文件？</h3><p>“.bat”是指“批处理文件”，是一种可执行文件，由一系列命令构成，其中可以包含对其他程序的调用。在命令提示下输入批处理文件的名称，或者双击该批处理文件，系统就会调用cmd.exe按照该文件中各个命令出现的顺序来逐个运行它们。使用批处理文件可以简化日常或重复性任务。</p><h3 id="2）echo-和-（设置命令窗口信息的回显方式）"><a href="#2）echo-和-（设置命令窗口信息的回显方式）" class="headerlink" title="2）echo 和 @（设置命令窗口信息的回显方式）"></a>2）echo 和 @（设置命令窗口信息的回显方式）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c">@                          #关闭单行回显<br>echo off                  #从下一行开始关闭回显<br>@echo off               #从本行开始关闭回显。一般批处理第一行都是这个<br>echo on                  #从下一行开始打开回显<br>echo                      #显示当前是 echo off 状态还是 echo on 状态<br>echo.                     #输出一个”回车换行”，空白行<br>                             #(同echo, echo; echo+ echo[ echo] echo/ echo\)<br></code></pre></td></tr></table></figure><h2 id="2、简单了解schtasks命令"><a href="#2、简单了解schtasks命令" class="headerlink" title="2、简单了解schtasks命令"></a>2、简单了解schtasks命令</h2><h3 id="1）什么是schtasks命令？"><a href="#1）什么是schtasks命令？" class="headerlink" title="1）什么是schtasks命令？"></a>1）什么是schtasks命令？</h3><p>schtasks即任务安排计划。用于安排命令和程序定期运行或在指定时间内运行。从计划表中添加和删除任务，按需要启动和停止任务，显示和更改计划任务。</p><h3 id="2）schtasks命令相关设置"><a href="#2）schtasks命令相关设置" class="headerlink" title="2）schtasks命令相关设置"></a>2）schtasks命令相关设置</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c">/Create         创建新计划任务<br><br>/Delete         删除计划任务<br><br>/Query          显示所有计划任务<br><br>/Change         更改计划任务属性<br><br>/Run            按需运行计划任务<br><br>/End            中止当前正在运行的计划任务<br><br>/ShowSid        显示与计划的任务名称相应的安全标识符<br><br>/?              显示此帮助消息<br></code></pre></td></tr></table></figure><h3 id="3）schtasks命令创建定时关机任务"><a href="#3）schtasks命令创建定时关机任务" class="headerlink" title="3）schtasks命令创建定时关机任务"></a>3）schtasks命令创建定时关机任务</h3><p>每天23：00：00关机，schtasks命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">schtasks /create /tn <span class="hljs-string">&quot;auto shutdown&quot;</span> /tr <span class="hljs-string">&quot;C:\Windows\System32\shutdown.exe /f /s /t 0&quot;</span> /sc daily /st <span class="hljs-number">23</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> -F<br></code></pre></td></tr></table></figure><p>命令相关参数设置解析，根据自己的需求进行更改</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">/Create         创建新计划任务<br>/tn指定任务的名称（上方命令任务名称为<span class="hljs-string">&quot;auto shutdown&quot;</span>）<br>/tr指定任务运行的程序或命令。键入可执行文件、脚本文件或批处理文件的完全合格的路径和文件名。如果忽略该路径，SchTasks.exe 将假定文件在 Systemroot\System32 目录下（关机需要shutdown.exe程序）<br>/sc指定计划类型。有效值为 MINUTE、HOURLY、DAILY、WEEKLY、MONTHLY、ONCE、ONSTART、ONLOGON、ONIDLE（这里设置DAILY，每天执行）<br>/st以 HH:MM:SS <span class="hljs-number">24</span> 小时格式指定时间。默认值是命令完成时的当前本地时间。/st 参数只对于 MINUTE、HOURLY、DAILY、WEEKLY、MONTHLY 和 ONCE 计划有效。它只对于 ONCE 计划是必需的（设置具体的关机设置，这里设置<span class="hljs-number">23</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>）<br>-F不确认打开的程序是否需要关闭，强制关机<br></code></pre></td></tr></table></figure><table><thead><tr><th>schedule值</th><th>说明</th></tr></thead><tbody><tr><td>MINUTE、HOURLY、DAILY、WEEKLY、MONTHLY</td><td>指定计划的时间单位</td></tr><tr><td>ONCE</td><td>任务在指定的日期和时间运行一次</td></tr><tr><td>ONSTART</td><td>任务在每次系统启动的时候运行。可以指定启动的日期，或下一次系统启动的时候运行任务</td></tr><tr><td>ONLOGON</td><td>每当用户（任意用户）登录的时候，任务就运行。可以指定日期，或在下次用户登录的时候运行任务</td></tr><tr><td>ONIDLE</td><td>只要系统空闲了指定的时间，任务就运行。可以指定日期，或在下次系统空闲的时候运行任务</td></tr><tr><td>DAILY</td><td>每天执行</td></tr><tr><td>WEEKLY</td><td>每周执行</td></tr><tr><td>MONTHLY</td><td>每月执行</td></tr></tbody></table><h2 id="3、创建bat文件，运行"><a href="#3、创建bat文件，运行" class="headerlink" title="3、创建bat文件，运行"></a>3、创建bat文件，运行</h2><p>创建.txt文件，复制以下命令道文件内，再修改文件后缀为.bat</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">@echo off<br>schtasks /create /tn <span class="hljs-string">&quot;auto shutdown&quot;</span> /tr <span class="hljs-string">&quot;C:\Windows\System32\shutdown.exe /f /s /t 0&quot;</span> /sc daily /st <span class="hljs-number">23</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> -F<br>pause<br></code></pre></td></tr></table></figure><p>命令解析</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">@echo off #从本行开始关闭回显。一般批处理第一行都是这个<br>schtasks /create /tn <span class="hljs-string">&quot;auto shutdown&quot;</span> /tr <span class="hljs-string">&quot;C:\Windows\System32\shutdown.exe /f /s /t 0&quot;</span> /sc daily /st <span class="hljs-number">23</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> -F#创建关机任务<br>pause#暂停<br></code></pre></td></tr></table></figure><h1 id="二、使用vbs文件运行bat文件，并配置到系统开机自动运行程序"><a href="#二、使用vbs文件运行bat文件，并配置到系统开机自动运行程序" class="headerlink" title="二、使用vbs文件运行bat文件，并配置到系统开机自动运行程序"></a>二、使用vbs文件运行bat文件，并配置到系统开机自动运行程序</h1><p>使用vbs的原因：运行bat文件会显示cmd命令窗口，使用vbs运行bat文件可以避免窗口显示</p><h2 id="1、简单了解vbs文件"><a href="#1、简单了解vbs文件" class="headerlink" title="1、简单了解vbs文件"></a>1、简单了解vbs文件</h2><h3 id="1）什么是vbs文件？"><a href="#1）什么是vbs文件？" class="headerlink" title="1）什么是vbs文件？"></a>1）什么是vbs文件？</h3><p>VBS是一种windows脚本，全称是：Microsoft Visual Basic Script Editon（VB脚本版），VBS是Visual Basic的一个抽象子集，是系统内置的，用VBS编写的脚本代码不能编译成二进制文件，直接由Windows系统执行（实际是一个叫做WSH：Windows Scripting Host，Windows脚本宿主解释源代码并执行）</p><h2 id="2、创建vbs命令"><a href="#2、创建vbs命令" class="headerlink" title="2、创建vbs命令"></a>2、创建vbs命令</h2><p>创建.txt文件，复制以下命令道文件内，再修改文件后缀为.vbs<br>”D:\at_23_shutdown\at_23_shutdown.bat“需要修改为自己的bat文件的路径</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-built_in">set</span> ws=WScript.CreateObject(<span class="hljs-string">&quot;WScript.Shell&quot;</span>)<br>ws.Run <span class="hljs-string">&quot;D:\at_23_shutdown\at_23_shutdown.bat /start&quot;</span> ,<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="3、配置vbs文件到系统开机启动程序"><a href="#3、配置vbs文件到系统开机启动程序" class="headerlink" title="3、配置vbs文件到系统开机启动程序"></a>3、配置vbs文件到系统开机启动程序</h2><p>Windows键+R键，输入shell:startup，回车，把上述创建的vbs文件放入该目录下（重启电脑生效）</p><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过配置vbs到系统启动程序，电脑启动后运行vbs，调用bat文件创建定时关机任务，实现电脑每天自动定时关机</p>]]></content>
    
    
    <categories>
      
      <category>实用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid 个人博客图片.com显示BUG解决</title>
    <link href="/2024/10/12/Hexo%20Fluid%20%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87.com%E6%98%BE%E7%A4%BABUG%E8%A7%A3%E5%86%B3/"/>
    <url>/2024/10/12/Hexo%20Fluid%20%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87.com%E6%98%BE%E7%A4%BABUG%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<center><h1>Hexo Fluid 个人博客图片.com显示BUG解决</h1></center><div class="note note-info">            <p>问题描述<br>今天在用Hexo、Fluid写文件，然后提交到博客后，发现图片不能加载，图片路径如下<br><a href="http://localhost:4000/.com//mysql/9e320d99d7b5f6ce12da8efe7509fa10.png">http://localhost:4000/.com//mysql/9e320d99d7b5f6ce12da8efe7509fa10.png</a></p>          </div><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><h2 id="这个错误是插件的bug。Hexo和Fluid在更新过程中，插件没有同步更新导致图片路径解析错误的bug"><a href="#这个错误是插件的bug。Hexo和Fluid在更新过程中，插件没有同步更新导致图片路径解析错误的bug" class="headerlink" title="这个错误是插件的bug。Hexo和Fluid在更新过程中，插件没有同步更新导致图片路径解析错误的bug"></a>这个错误是插件的bug。Hexo和Fluid在更新过程中，插件没有同步更新导致图片路径解析错误的bug</h2><h1 id="解决办法（配置正确的图片解析路径）"><a href="#解决办法（配置正确的图片解析路径）" class="headerlink" title="解决办法（配置正确的图片解析路径）"></a>解决办法（配置正确的图片解析路径）</h1><h2 id="1、下载安装hexo-asset-image插件"><a href="#1、下载安装hexo-asset-image插件" class="headerlink" title="1、下载安装hexo-asset-image插件"></a>1、下载安装hexo-asset-image插件</h2><p>下载插件命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">npm install hexo-asset-image –save<br></code></pre></td></tr></table></figure><p>查看hexo-asset-image插件版本号，检验是否安装成功</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">npm hexo-asset-image -version<br></code></pre></td></tr></table></figure><h2 id="2、了解图片放置位置（放置位置关系到后面配置）"><a href="#2、了解图片放置位置（放置位置关系到后面配置）" class="headerlink" title="2、了解图片放置位置（放置位置关系到后面配置）"></a>2、了解图片放置位置（放置位置关系到后面配置）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c">一般情况下的图片位置如下<br><span class="hljs-number">1</span>，放在fluid的source下的img目录里（博主放置的位置）<br>如：D:\soft\WorkSpace\hexo-Only\hexo-blog\themes\fluid\source\img<br><span class="hljs-number">2</span>，放在和自己的.md文件的同名文件夹下面<br><span class="hljs-number">3</span>，放在hexo的source的images目录下（images目录是自己创建的，没有则自己没有创建过）<br>如：D:\soft\WorkSpace\hexo-Only\hexo-blog\source\images<br><br>找到打不开的图片，鼠标右键，复制图片地址（或者F12，在HTML找到图片地址）<br>如博主复制的地址：http:<span class="hljs-comment">//localhost:4000/.com//mysql/9e320d99d7b5f6ce12da8efe7509fa10.png</span><br><br></code></pre></td></tr></table></figure><p><img src="/img/bug/hexo_fluid/%E5%A4%8D%E5%88%B6%E5%9C%B0%E5%9D%80.png"></p><h2 id="3、根据自己的复制文件地址和配置的图片地址，分析正确的图片路径"><a href="#3、根据自己的复制文件地址和配置的图片地址，分析正确的图片路径" class="headerlink" title="3、根据自己的复制文件地址和配置的图片地址，分析正确的图片路径"></a>3、根据自己的复制文件地址和配置的图片地址，分析正确的图片路径</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"> 博主图片放置位置：如：D:\soft\WorkSpace\hexo-Only\hexo-blog\themes\fluid\source\img\mysql<br>PS：hexo-blog是博主的项目名<br> 图片解析路径：http:<span class="hljs-comment">//localhost:4000/.com//mysql/9e320d99d7b5f6ce12da8efe7509fa10.png</span><br><br>图片路径分析<br>http:<span class="hljs-comment">//localhost:4000/  是我运行的本地端口地址</span><br>/mysql/<span class="hljs-number">9e320</span>d99d7b5f6ce12da8efe7509fa10.png  是图片的路径<br>对比我的图片放置位置，少了img路径（img之前是source资源根目录，所以才分析只少了img）<br>确定图片加载的时候，把<span class="hljs-string">&quot;img&quot;</span>加载成了<span class="hljs-string">&quot;.com/&quot;</span><br><br>也就是图片的正确路径是：http:<span class="hljs-comment">//localhost:4000/img/mysql/9e320d99d7b5f6ce12da8efe7509fa10.png</span><br><br>图片地址打开如下<br></code></pre></td></tr></table></figure><p><img src="/img/bug/hexo_fluid/%E6%AD%A3%E7%A1%AE%E5%9C%B0%E5%9D%80%E5%9B%BE%E7%89%87.png"></p><h2 id="4、打开hexo项目的node-modules-hexo-asset-image-index-js，修改图片解析路径的配置"><a href="#4、打开hexo项目的node-modules-hexo-asset-image-index-js，修改图片解析路径的配置" class="headerlink" title="4、打开hexo项目的node_modules\hexo-asset-image\index.js，修改图片解析路径的配置"></a>4、打开hexo项目的node_modules\hexo-asset-image\index.js，修改图片解析路径的配置</h2><p>找到以下代码（可以按Ctrl+F，快速查找定位到代码位置）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">$(this).attr(<span class="hljs-string">&#x27;src&#x27;</span>, config.root + link + src);<br>console.info&amp;&amp;console.info(<span class="hljs-string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);<br></code></pre></td></tr></table></figure><p>link就是解析成”.com“的错误参数，把link修改为”img&#x2F;“，修改后如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"> <span class="hljs-comment">//$(this).attr(&#x27;src&#x27;, config.root + link + src);</span><br> $(this).attr(<span class="hljs-string">&#x27;src&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span> + <span class="hljs-string">&#x27;img/&#x27;</span> + src);<br> <span class="hljs-comment">//console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br>console.info&amp;&amp;console.info(<span class="hljs-string">&quot;update link as:--&gt;&quot;</span> + <span class="hljs-string">&#x27;/&#x27;</span> + <span class="hljs-string">&#x27;img/&#x27;</span> + src);<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>如果你要使用绝对路径，也是在这里改，把图片路径拼拼剪剪，路径对了图片就可以正常显示了</p>          </div><h2 id="5、清理缓存数据（必须要清理，不然还是按没修改之前的文件配置来的）"><a href="#5、清理缓存数据（必须要清理，不然还是按没修改之前的文件配置来的）" class="headerlink" title="5、清理缓存数据（必须要清理，不然还是按没修改之前的文件配置来的）"></a>5、清理缓存数据（必须要清理，不然还是按没修改之前的文件配置来的）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">hexo clean<br></code></pre></td></tr></table></figure><h2 id="6、重启项目"><a href="#6、重启项目" class="headerlink" title="6、重启项目"></a>6、重启项目</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure><hr><h1 id="到此BUG就解决了"><a href="#到此BUG就解决了" class="headerlink" title="到此BUG就解决了"></a>到此BUG就解决了</h1>]]></content>
    
    
    <categories>
      
      <category>BUG</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TortoiseGit下载及安装</title>
    <link href="/2024/10/12/TortoiseGit%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85/"/>
    <url>/2024/10/12/TortoiseGit%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<center><h1>TortoiseGit下载及安装</h1></center><div class="note note-info">            <p>TortoiseGit 是基于 TortoiseSVN 的 Git 版本的 Windows Shell 界面。它是开源的，可以完全使用免费软件构建<br>使用TortoiseGit比直接使用git 客户端和命令实现代码版本管理更为方便，本文根据实际使用情况作一些记录，特别是对于解决冲突的处理</p>          </div><p>#下载</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">官网下载：https:<span class="hljs-comment">//tortoisegit.org/download/</span><br>蓝奏云：https:<span class="hljs-comment">//wwuk.lanzouo.com/b0nyj7cub</span><br>密码: hqzr<br></code></pre></td></tr></table></figure><h1 id="官网下载教程"><a href="#官网下载教程" class="headerlink" title="官网下载教程"></a>官网下载教程</h1><h2 id="打开TortoiseGit官网，根据需求下载系统对应的版本和汉化包（一般都是64位）"><a href="#打开TortoiseGit官网，根据需求下载系统对应的版本和汉化包（一般都是64位）" class="headerlink" title="打开TortoiseGit官网，根据需求下载系统对应的版本和汉化包（一般都是64位）"></a>打开<a href="https://tortoisegit.org/download/">TortoiseGit官网</a>，根据需求下载系统对应的版本和汉化包（一般都是64位）</h2><p><img src="/img/tortoiseGit/TortoiseGit%E4%B8%8B%E8%BD%BD.png"></p><h1 id="TortoiseGit安装"><a href="#TortoiseGit安装" class="headerlink" title="TortoiseGit安装"></a>TortoiseGit安装</h1><p>PS：安装TortoiseGit之前需要安装Git，安装Git<a href="https://only585847.github.io/2024/10/07/Git%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/">点击这里</a></p><h2 id="1、先安装程序文件，双击进行安装，都是next"><a href="#1、先安装程序文件，双击进行安装，都是next" class="headerlink" title="1、先安装程序文件，双击进行安装，都是next"></a>1、先安装程序文件，双击进行安装，都是next</h2><p>（比如：TortoiseGit-2.16.0.0-64bit.msi）<br><img src="/img/tortoiseGit/%E7%A8%8B%E5%BA%8F%E6%96%87%E4%BB%B6.png"><br><img src="/img/tortoiseGit/%E5%AE%89%E8%A3%851.png"><br><img src="/img/tortoiseGit/%E5%AE%89%E8%A3%852.png"><br><img src="/img/tortoiseGit/%E5%AE%89%E8%A3%853.png"><br><img src="/img/tortoiseGit/%E5%AE%89%E8%A3%854.png"><br><img src="/img/tortoiseGit/install.png"><br><img src="/img/tortoiseGit/%E7%AD%89%E5%BE%85%E5%AE%89%E8%A3%85.png"></p><h2 id="2、安装完成后，打开TortoiseGit进行初始化"><a href="#2、安装完成后，打开TortoiseGit进行初始化" class="headerlink" title="2、安装完成后，打开TortoiseGit进行初始化"></a>2、安装完成后，打开TortoiseGit进行初始化</h2><p><img src="/img/tortoiseGit/finishi.png"><br><img src="/img/tortoiseGit/%E5%88%9D%E5%A7%8B%E5%8C%961.png"><br>路径为Git的bin目录，安装时会自动读取到<br><img src="/img/tortoiseGit/%E5%88%9D%E5%A7%8B%E5%8C%962.png"><br>名字和邮箱是初始化Git时的名字和邮箱<br><img src="/img/tortoiseGit/%E5%88%9D%E5%A7%8B%E5%8C%963.png"><br><img src="/img/tortoiseGit/%E5%AE%8C%E6%88%90.png"></p><h1 id="TortoiseGit汉化"><a href="#TortoiseGit汉化" class="headerlink" title="TortoiseGit汉化"></a>TortoiseGit汉化</h1><p>双击汉化程序进行汉化<br><img src="/img/tortoiseGit/%E6%B1%89%E5%8C%96%E6%96%87%E4%BB%B6.png"><br><img src="/img/tortoiseGit/%E6%B1%89%E5%8C%961.png"><br><img src="/img/tortoiseGit/%E6%B1%89%E5%8C%962.png"></p><h1 id="确认TortoiseGit是否汉化成功"><a href="#确认TortoiseGit是否汉化成功" class="headerlink" title="确认TortoiseGit是否汉化成功"></a>确认TortoiseGit是否汉化成功</h1><p>右键点击桌面，TortoiseGit–&gt;“设置、帮助、关于”都为中午，即汉化成功<br><img src="/img/tortoiseGit/%E6%88%90%E5%8A%9F.png"></p><hr><h1 id="TortoiseGit下载、安装及汉化到此结束"><a href="#TortoiseGit下载、安装及汉化到此结束" class="headerlink" title="TortoiseGit下载、安装及汉化到此结束"></a>TortoiseGit下载、安装及汉化到此结束</h1>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
      <category>TortoiseGit</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu初始化/修改密码</title>
    <link href="/2024/10/12/Ubuntu%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%96%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/"/>
    <url>/2024/10/12/Ubuntu%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%96%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<center><h1>Ubuntu初始化/修改密码</h1></center><div class="note note-info">            <p>登录ubuntu后，使用sudo passwd root命令，进行root密码的初始化&#x2F;修改</p>          </div><h1 id="1、初始化命令"><a href="#1、初始化命令" class="headerlink" title="1、初始化命令"></a>1、初始化命令</h1><p>注：这里需要保证两次输入的密码都是同一个，才可成功</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo passwd root<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/start/%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81.png"></p><h1 id="2、进入root命令"><a href="#2、进入root命令" class="headerlink" title="2、进入root命令"></a>2、进入root命令</h1><p>通过su root从ubuntu用户切换为root用户</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">su root<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/start/%E7%99%BB%E5%BD%95root.png"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Ubuntu</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu安装Docker</title>
    <link href="/2024/10/12/Ubuntu%E5%AE%89%E8%A3%85Docker/"/>
    <url>/2024/10/12/Ubuntu%E5%AE%89%E8%A3%85Docker/</url>
    
    <content type="html"><![CDATA[<center><h1>Ubuntu安装Docker</h1></center><div class="note note-info">            <p>Docker是一种流行的容器化平台，它能够简化应用程序的部署和管理。本文将介绍在Ubuntu操作系统上安装Docker的步骤，以便我们可以开始使用Docker来构建和运行容器化应用程序</p>          </div><h1 id="卸载旧版docker"><a href="#卸载旧版docker" class="headerlink" title="卸载旧版docker"></a>卸载旧版docker</h1><p>ubuntu下自带了docker的库，但docker版本太低，需要先卸载旧的再安装新的。<br>docker旧版本被称docker.io 或 docker-engine，所以我们卸载的命令为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">$ apt-get remove docker docker-engine docker.io containerd runc<br></code></pre></td></tr></table></figure><h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><h2 id="1、更新软件包"><a href="#1、更新软件包" class="headerlink" title="1、更新软件包"></a>1、更新软件包</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo apt update<br>sudo apt upgrade<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/update.png"><br><img src="/img/ubuntu/docker/install/upgrade.png"></p><h2 id="2、安装docker依赖"><a href="#2、安装docker依赖" class="headerlink" title="2、安装docker依赖"></a>2、安装docker依赖</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">apt-get install ca-certificates curl gnupg lsb-release<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/%E4%BE%9D%E8%B5%96%E5%AE%89%E8%A3%85.png"></p><h2 id="3、添加Docker官方GPG密钥"><a href="#3、添加Docker官方GPG密钥" class="headerlink" title="3、添加Docker官方GPG密钥"></a>3、添加Docker官方GPG密钥</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">curl -fsSL http:<span class="hljs-comment">//mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/%E5%AE%89%E8%A3%85GPG%E7%A7%98%E9%92%A5.png"></p><h2 id="4、添加Docker软件源"><a href="#4、添加Docker软件源" class="headerlink" title="4、添加Docker软件源"></a>4、添加Docker软件源</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/%E6%B7%BB%E5%8A%A0docker%E8%BD%AF%E4%BB%B6%E6%BA%90.png"></p><h2 id="5、安装Docker"><a href="#5、安装Docker" class="headerlink" title="5、安装Docker"></a>5、安装Docker</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">apt-get install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/%E5%AE%89%E8%A3%85docker.png"></p><h2 id="6、查看docker版本"><a href="#6、查看docker版本" class="headerlink" title="6、查看docker版本"></a>6、查看docker版本</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">docker --version<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/%E6%9F%A5%E7%9C%8Bdocker%E7%89%88%E6%9C%AC.png"></p><hr><h1 id="到此结束"><a href="#到此结束" class="headerlink" title="到此结束"></a>到此结束</h1>]]></content>
    
    
    <categories>
      
      <category>Ubuntu</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>谷歌浏览器安装配置Postman插件</title>
    <link href="/2024/10/12/%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEPostman%E6%8F%92%E4%BB%B6/"/>
    <url>/2024/10/12/%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEPostman%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<center><h1>谷歌浏览器安装配置Postman插件</h1></center><div class="note note-info">            <p>Postman最早是Google浏览器的一个插件存在的，因为Google退出国内市场，现在postman主要是以一个 APP的形式存在。<br>Postman最初设计上就是为接口测试而设计的，对于测试人员来说主要用来做接口测试。<br>今天我们要在谷歌浏览器中安装postman插件</p>          </div><blockquote><p>Postman插件获取<br>链接：<a href="https://pan.baidu.com/s/1mWvTp7BBPYeYrbsF9OLEqQ">https://pan.baidu.com/s/1mWvTp7BBPYeYrbsF9OLEqQ</a><br>提取码：b0qx </p></blockquote><p><strong>视频教程：</strong><a href="https://www.bilibili.com/video/BV1H3411T7Bd"><strong>点击跳转</strong></a></p><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="1-打开谷歌浏览器，点击右上方三个点，选择更多工具，点击扩展程序"><a href="#1-打开谷歌浏览器，点击右上方三个点，选择更多工具，点击扩展程序" class="headerlink" title="1.打开谷歌浏览器，点击右上方三个点，选择更多工具，点击扩展程序"></a>1.打开谷歌浏览器，点击右上方三个点，选择更多工具，点击扩展程序</h2><p><img src="/img/postman/a7c0ebd455143e3b254f82a06424b9ef.png#"></p><h2 id="2-打开开发者模式"><a href="#2-打开开发者模式" class="headerlink" title="2.打开开发者模式"></a>2.打开开发者模式</h2><p><img src="/img/postman/00cefd2c0215dace72e6cd1c090cb79a.png"></p><h2 id="3-解压扩展程序包（文章最上边获取），点击加载已解压的扩展程序"><a href="#3-解压扩展程序包（文章最上边获取），点击加载已解压的扩展程序" class="headerlink" title="3.解压扩展程序包（文章最上边获取），点击加载已解压的扩展程序"></a>3.解压扩展程序包（文章最上边获取），点击加载已解压的扩展程序</h2><p><img src="/img/postman/395a6a7083c5e1adee1d07ef374f4c6b.png"></p><h2 id="4-选择我们刚刚解压好的扩展程序"><a href="#4-选择我们刚刚解压好的扩展程序" class="headerlink" title="4.选择我们刚刚解压好的扩展程序"></a>4.选择我们刚刚解压好的扩展程序</h2><p><img src="/img/postman/a44edab49ffddb39aea82f8322e9620e.png"></p><h2 id="5-有下边图标就表示扩展程序加载成功"><a href="#5-有下边图标就表示扩展程序加载成功" class="headerlink" title="5. 有下边图标就表示扩展程序加载成功"></a>5. 有下边图标就表示扩展程序加载成功</h2><p><img src="/img/postman/3cde55b21d531831ac43b974c1943616.png"></p><h2 id="6-上边路由输入-chrome-apps-进入应用首页，点击postman图标"><a href="#6-上边路由输入-chrome-apps-进入应用首页，点击postman图标" class="headerlink" title="6.上边路由输入 chrome:&#x2F;&#x2F;apps 进入应用首页，点击postman图标"></a>6.上边路由输入 chrome:&#x2F;&#x2F;apps 进入应用首页，点击postman图标</h2><p><img src="/img/postman/7d58c2c7f94d6e2f4675e6a3783ae338.png"></p><h2 id="7-点击下方蓝色文字跳过注册"><a href="#7-点击下方蓝色文字跳过注册" class="headerlink" title="7.点击下方蓝色文字跳过注册"></a>7.点击下方蓝色文字跳过注册</h2><p><img src="/img/postman/23768e476ff9667623fdf87fe2de692a.png"></p><h2 id="8-到此页面证明postman安装配置成功了"><a href="#8-到此页面证明postman安装配置成功了" class="headerlink" title="8.到此页面证明postman安装配置成功了"></a>8.到此页面证明postman安装配置成功了</h2><p><img src="/img/postman/9bbbaeef21d8a61b41a3e35852152fa2.png"></p><hr><h1 id="到此配置完成"><a href="#到此配置完成" class="headerlink" title="到此配置完成"></a>到此配置完成</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.bilibili.com/video/BV1cF411379B">我的个人博客：谷歌浏览器安装配置Postman插件，简单操作</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>文章分类标签</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决docker拉取镜像问题</title>
    <link href="/2024/10/12/%E8%A7%A3%E5%86%B3docker%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F%E9%97%AE%E9%A2%98/"/>
    <url>/2024/10/12/%E8%A7%A3%E5%86%B3docker%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<center><h1>解决docker拉取镜像问题</h1></center><div class="note note-info">            <p>Docker拉起镜像的时候出现报错如下<br>Error response from daemon: Get “<a href="https://registry-1.docker.io/v2/">https://registry-1.docker.io/v2/</a>“: read tcp 192.168.189.136:46204-&gt;54.198.86.24:443: read: connection reset by peer</p>          </div><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><h2 id="1、配置DNS"><a href="#1、配置DNS" class="headerlink" title="1、配置DNS"></a>1、配置DNS</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo gedit /etc/resolv.conf<br></code></pre></td></tr></table></figure><p>修改如下<br><img src="/img/ubuntu/docker/install/%E9%85%8D%E7%BD%AEDNS.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"># This file is managed by man:systemd-resolved(<span class="hljs-number">8</span>). Do not edit.<br>#<br># This is a dynamic resolv.conf file <span class="hljs-keyword">for</span> connecting local clients to the<br><span class="hljs-meta"># internal DNS stub resolver of systemd-resolved. This file lists all</span><br><span class="hljs-meta"># configured search domains.</span><br>#<br># Run <span class="hljs-string">&quot;systemd-resolve --status&quot;</span> to see details about the uplink DNS servers<br><span class="hljs-meta"># currently in use.</span><br>#<br># Third party programs must not access this file directly, but only through the<br><span class="hljs-meta"># symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,</span><br><span class="hljs-meta"># replace this symlink by a static file or a different symlink.</span><br>#<br># See man:systemd-resolved.service(<span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> details about the supported modes of<br><span class="hljs-meta"># operation for /etc/resolv.conf.</span><br><br>nameserver <span class="hljs-number">114.114</span><span class="hljs-number">.114</span><span class="hljs-number">.114</span><br>nameserver <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.53</span><br>options edns0 trust-ad<br>search localdomain<br></code></pre></td></tr></table></figure><h2 id="2、修改docker的daemon-json文件"><a href="#2、修改docker的daemon-json文件" class="headerlink" title="2、修改docker的daemon.json文件"></a>2、修改docker的daemon.json文件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo gedit /etc/docker/daemon.json<br></code></pre></td></tr></table></figure><p>修改docker的daemon.json文件为以下内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c">&#123;<br>     <span class="hljs-string">&quot;max-concurrent-downloads&quot;</span>: <span class="hljs-number">10</span>,<br>     <span class="hljs-string">&quot;max-concurrent-uploads&quot;</span>: <span class="hljs-number">5</span>,<br>     <span class="hljs-string">&quot;default-shm-size&quot;</span>: <span class="hljs-string">&quot;1G&quot;</span>,<br>     <span class="hljs-string">&quot;debug&quot;</span>: <span class="hljs-literal">true</span>,<br>     <span class="hljs-string">&quot;experimental&quot;</span>: <span class="hljs-literal">false</span>,<br>     <span class="hljs-string">&quot;registry-mirrors&quot;</span>:[<br>                <span class="hljs-string">&quot;https://x9r52uz5.mirror.aliyuncs.com&quot;</span>,<br>                <span class="hljs-string">&quot;https://dockerhub.icu&quot;</span>,<br>                <span class="hljs-string">&quot;https://docker.chenby.cn&quot;</span>,<br>                <span class="hljs-string">&quot;https://docker.1panel.live&quot;</span>,<br>                <span class="hljs-string">&quot;https://docker.awsl9527.cn&quot;</span>,<br>                <span class="hljs-string">&quot;https://docker.anyhub.us.kg&quot;</span>,<br>                <span class="hljs-string">&quot;https://dhub.kubesre.xyz&quot;</span><br>        ]<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/%E4%BF%AE%E6%94%B9daemon%E6%96%87%E4%BB%B6.png"></p><h2 id="3、ubuntu关机重启，使配置文件生效（不要跳过，单纯重启docker服务配置可以不生效）"><a href="#3、ubuntu关机重启，使配置文件生效（不要跳过，单纯重启docker服务配置可以不生效）" class="headerlink" title="3、ubuntu关机重启，使配置文件生效（不要跳过，单纯重启docker服务配置可以不生效）"></a>3、ubuntu关机重启，使配置文件生效（不要跳过，单纯重启docker服务配置可以不生效）</h2><h2 id="4、重启docker服务，并拉起镜像"><a href="#4、重启docker服务，并拉起镜像" class="headerlink" title="4、重启docker服务，并拉起镜像"></a>4、重启docker服务，并拉起镜像</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">systemctl start docker<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo docker run hello-world<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/%E6%B5%8B%E8%AF%95%E6%8B%89%E5%8F%96.png"></p><h2 id="5、查看拉取的镜像"><a href="#5、查看拉取的镜像" class="headerlink" title="5、查看拉取的镜像"></a>5、查看拉取的镜像</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">docker images <br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/install/%E6%9F%A5%E7%9C%8Bdocker%E9%95%9C%E5%83%8F.png"></p><hr><h1 id="到此结束"><a href="#到此结束" class="headerlink" title="到此结束"></a>到此结束</h1>]]></content>
    
    
    <categories>
      
      <category>Bug</category>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker安装Redis</title>
    <link href="/2024/10/12/Docker%E5%AE%89%E8%A3%85Redis/"/>
    <url>/2024/10/12/Docker%E5%AE%89%E8%A3%85Redis/</url>
    
    <content type="html"><![CDATA[<center><h1>Docker安装Redis</h1></center><div class="note note-info">            <p>Redis，英文全称是Remote Dictionary Server（远程字典服务），是一个开源（BSD许可），内存存储的数据结构服务器，可用作数据库，高速缓存和消息队列代理。</p>          </div><h1 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h1><h2 id="1、拉取镜像"><a href="#1、拉取镜像" class="headerlink" title="1、拉取镜像"></a>1、拉取镜像</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">docker pull redis:<span class="hljs-number">6.2</span><span class="hljs-number">.6</span><br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/redis/Redis%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%96.png"></p><h2 id="2、创建Redis配置文件"><a href="#2、创建Redis配置文件" class="headerlink" title="2、创建Redis配置文件"></a>2、创建Redis配置文件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">mkdir -p /data/dockerData/redis/conf<br>cd /data/dockerData/redis/conf<br>touch redis.config<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/redis/%E5%88%9B%E5%BB%BARedis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B61.png"><br><img src="/img/ubuntu/docker/redis/%E5%88%9B%E5%BB%BARedis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B62.png"></p><h2 id="3、编辑Redis配置文件"><a href="#3、编辑Redis配置文件" class="headerlink" title="3、编辑Redis配置文件"></a>3、编辑Redis配置文件</h2><p>编辑命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo gedit redis.config<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/redis/%E6%89%93%E5%BC%80Redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"><br>redis.config配置文件如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs c"># Redis服务器配置 <br> <br># 绑定IP地址<br>#解除本地限制 注释bind <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>  <br><span class="hljs-meta">#bind 127.0.0.1  </span><br> <br># 服务器端口号  <br>port <span class="hljs-number">6379</span> <br> <br>#配置密码，不要可以删掉<br>requirepass <span class="hljs-number">123456</span><br> <br>#这个配置不要会和docker -d 命令 冲突<br># 服务器运行模式，Redis以守护进程方式运行,默认为no，改为yes意为以守护进程方式启动，可后台运行，除非kill进程，改为yes会使配置文件方式启动redis失败，如果后面redis启动失败，就将这个注释掉<br>daemonize no<br> <br>#当Redis以守护进程方式运行时，Redis默认会把pid写入/var/run/redis.pid文件，可以通过pidfile指定(自定义)<br><span class="hljs-meta">#pidfile /data/dockerData/redis/run/redis6379.pid  </span><br> <br>#默认为no，redis持久化，可以改为yes<br>appendonly yes<br> <br>#当客户端闲置多长时间后关闭连接，如果指定为<span class="hljs-number">0</span>，表示关闭该功能<br>timeout <span class="hljs-number">60</span><br># 服务器系统默认配置参数影响 Redis 的应用<br>maxclients <span class="hljs-number">10000</span><br>tcp-keepalive <span class="hljs-number">300</span><br> <br>#指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合（分别表示<span class="hljs-number">900</span>秒（<span class="hljs-number">15</span>分钟）内有<span class="hljs-number">1</span>个更改，<span class="hljs-number">300</span>秒（<span class="hljs-number">5</span>分钟）内有<span class="hljs-number">10</span>个更改以及<span class="hljs-number">60</span>秒内有<span class="hljs-number">10000</span>个更改）<br>save <span class="hljs-number">900</span> <span class="hljs-number">1</span><br>save <span class="hljs-number">300</span> <span class="hljs-number">10</span><br>save <span class="hljs-number">60</span> <span class="hljs-number">10000</span><br> <br># 按需求调整 Redis 线程数<br>tcp-backlog <span class="hljs-number">511</span><br> <br># 设置数据库数量，这里设置为<span class="hljs-number">16</span>个数据库  <br>databases <span class="hljs-number">16</span><br> <br># 启用 AOF, AOF常规配置<br>appendonly yes<br>appendfsync everysec<br>no-appendfsync-on-rewrite no<br><span class="hljs-keyword">auto</span>-aof-rewrite-percentage <span class="hljs-number">100</span><br><span class="hljs-keyword">auto</span>-aof-rewrite-min-size <span class="hljs-number">64</span>mb<br> <br># 慢查询阈值<br>slowlog-<span class="hljs-built_in">log</span>-slower-than <span class="hljs-number">10000</span><br>slowlog-max-len <span class="hljs-number">128</span><br> <br># 是否记录系统日志，默认为yes  <br>syslog-enabled yes  <br> <br>#指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose<br>loglevel notice<br>  <br># 日志输出文件，默认为<span class="hljs-built_in">stdout</span>，也可以指定文件路径  <br>logfile <span class="hljs-built_in">stdout</span><br> <br># 日志文件<br><span class="hljs-meta">#logfile /var/log/redis/redis-server.log</span><br> <br># 系统内存调优参数   <br># 按需求设置<br>hash-max-ziplist-entries <span class="hljs-number">512</span><br>hash-max-ziplist-value <span class="hljs-number">64</span><br><span class="hljs-built_in">list</span>-max-ziplist-entries <span class="hljs-number">512</span><br><span class="hljs-built_in">list</span>-max-ziplist-value <span class="hljs-number">64</span><br><span class="hljs-built_in">set</span>-max-intset-entries <span class="hljs-number">512</span><br>zset-max-ziplist-entries <span class="hljs-number">128</span><br>zset-max-ziplist-value <span class="hljs-number">64</span><br></code></pre></td></tr></table></figure><p>配置文件详解，仅作参考</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><code class="hljs c">daemonize no<br>默认情况下，redis不是在后台运行的。如果需要在后台运行，把该项的值更改为yes。<br> <br>pidfile /var/run/redis.pid<br>当redis在后台运行的时候，redis默认会把pid文件放在/var/run/redis.pid，你可以配置到其他位置。当运行多个redis服务时，需要指定不同的pid文件和端口。<br> <br>port <span class="hljs-number">6379</span><br>指定redis运行的端口，默认是<span class="hljs-number">6379</span>。<br> <br>bind <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br>指定redis只接收来自于该IP地址的请求看，如果不进行设置，那么将处理所有请求。在生产环境中最好设置该项。<br> <br>loglevel debug<br>指定日志记录级别，其中redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose。<br><span class="hljs-number">1</span> . debug表示记录很多信息,用于开发和测试<br><span class="hljs-number">2</span>．verbose表示记录有用的信息, 但不像debug会记录那么多<br><span class="hljs-number">3</span>．notice表示普通的verbose，常用于生产环境<br><span class="hljs-number">4</span>．warning 表示只有非常重要或者严重的信息会记录到日志<br> <br>logfile /var/<span class="hljs-built_in">log</span>/redis/redis.<span class="hljs-built_in">log</span><br>配置<span class="hljs-built_in">log</span>文件地址,默认值为<span class="hljs-built_in">stdout</span>。若后台模式会输出到/dev/null。<br> <br>databases <span class="hljs-number">16</span><br>可用数据库数，默认值为<span class="hljs-number">16</span>，默认数据库为<span class="hljs-number">0</span>，数据库范围在<span class="hljs-number">0</span>~<span class="hljs-number">15</span>之间切换，彼此隔离。<br> <br>save<br>保存数据到磁盘，格式为save，指出在多长时间内，有多少次更新操作，就将数据同步到数据文件rdb。相当于条件触发抓取快照，这个可以多个条件配合。<br>save <span class="hljs-number">9001</span>就表示<span class="hljs-number">900</span>秒内至少有<span class="hljs-number">1</span>个key被改变就保存数据到磁盘。<br> <br>rdbcompression yes<br>存储至本地数据库时(持久化到rdb文件)是否压缩数据，默认为yes。<br> <br>dbfilename dump.rdb<br>本地持久化数据库文件名，默认值为dump.rdb。<br> <br>dir ./<br>工作目录，数据库镜像备份的文件放置的路径。这里的路径跟文件名要分开配置是因为redis在进行备份时，先会将当前数据库的状态写入到一个临时文件中，等备份完成时，再把该临时文件替换为上面所指定的文件。 而这里的临时文件和上面所配置的备份文件都会放在这个指定的路径当中，AOF文件也会存放在这个目录下面。 注意这里必须指定一个目录而不是文件。<br> <br>slaveof<br>主从复制，设置该数据库为其他数据库的从数据库。设置当本机为slave服务时，设置master服务的IP地址及端口。 在redis启动时,它会自动从master进行数据同步。<br> <br>masterauth<br>​当master服务设置了密码保护时(用requirepass制定的密码)slave服务连接master的密码。<br> <br>slave-serve-stale-data yes<br>当从库同主机失去连接或者复制正在进行，从机库有两种运行方式：<br>如果slave-serve-stale-data设置为 yes(默认设置)，从库会继续相应客户端的请求。<br>如果slave-serve-stale-data是指为no，除去INFO和SLAVOF命令之外的任何请求都会返回一个错误<span class="hljs-string">&quot;SYNC with master in progress&quot;</span>。<br> <br>repl-ping-slave-period <span class="hljs-number">10</span><br>从库会按照一个时间间隔向主库发送PING，可以通过repl-ping-slave-period设置这个时间间隔,默认是<span class="hljs-number">10</span>秒。<br> <br>repl-timeout <span class="hljs-number">60</span><br>设置主库批量数据传输时间或者ping回复时间间隔，默认值是<span class="hljs-number">60</span>秒，一定要确保repl-timeout大于repl-ping-slave-period。<br> <br>requirepass foobared<br>设置客户端连接后进行任何其他指定前需要使用的密码。因为redis速度相当快，所以在一台比较好的服务器平台下, 一个外部的用户可以在一秒钟进行<span class="hljs-number">150</span>K次的密码尝试，这意味着你需要指定非常强大的密码来防止暴力破解。<br> <br>rename​command CONFIG “”<br>命令重命名，在一个共享环境下可以重命名相对危险的命令，比如把CONFIG重名为一个不容易猜测的字符：<br>rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52<br>如果想删除一个命令，直接把它重命名为一个空字符<span class="hljs-string">&quot;&quot;</span>即可：rename-command CONFIG “”。<br> <br>maxclients <span class="hljs-number">128</span><br>设置同一时间最大客户端连接数，默认无限制。redis可以同时打开的客户端连接数为redis进程可以打开的最大文件描述符数。<br>如果设置 maxclients <span class="hljs-number">0</span>，表示不作限制。当客户端连接数到达限制时，redis会关闭新的连接并向客户端返回max number of clients reached错误信息。<br> <br>maxmemory<br>指定redis最大内存限制。redis在启动时会把数据加载到内存中，达到最大内存后，redis会先尝试清除已到期或即将到期的key，redis同时也会移除空的<span class="hljs-built_in">list</span>对象。当此方法处理后,仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。<br>注意：redis新的vm机制，会把key存放内存，value会存放在swap区。<br> <br>maxmemory-policy <span class="hljs-keyword">volatile</span>-lru<br>当内存达到最大值的时候redis会选择删除哪些数据呢？有五种方式可供选择：<br><span class="hljs-number">1</span>．<span class="hljs-keyword">volatile</span>-lru代表利用LRU算法移除设置过期时间的key(LRU：最近使用LeastRecentlyUsed)<br><span class="hljs-number">2</span>．allkeys-lru代表利用LRU算法移除任何key<br><span class="hljs-number">3</span>．<span class="hljs-keyword">volatile</span>-random代表移除设置过过期时间的随机key<br><span class="hljs-number">4</span>．allkeys_random代表移除一个随机的key<br><span class="hljs-number">5</span>． <span class="hljs-keyword">volatile</span>-ttl代表移除即将过期的key(minor TTL)<br><span class="hljs-number">6</span>． noeviction代表不移除任何key，只是返回一个写错误<br>注意：对于上面的策略，如果没有合适的key可以移除，写的时候redis会返回一个错误。<br> <br>appendonly no<br>默认情况下，redis会在后台异步的把数据库镜像备份到磁盘，但是该备份是非常耗时的，而且备份也不能很频繁。 如果发生诸如拉闸限电、拔插头等状况，那么将造成比较大范围的数据丢失，所以redis提供了另外一种更加高效的数据库备份及灾难恢复方式。<br>开启append only模式之后，redis会把所接收到的每一次写操作请求都追加到appendonly. aof文件中。当redis重新启动时，会从该文件恢复出之前的状态，但是这样会造成appendonly. aof文件过大，所以redis还支持BGREWRITEAOF指令对appendonly.aof。<br> <br>appendfilename appendonly.aof<br>AOF文件名称，默认为<span class="hljs-string">&quot;appendonly.aof&quot;</span>。<br> <br>appendfsync everysec<br>redis支持三种同步AOF文件的策略：<br><span class="hljs-number">1</span>．no代表不进行同步,系统去操作<br><span class="hljs-number">2</span>．always代表每次有写操作都进行同步<br><span class="hljs-number">3</span>．everysec代表对写操作进行累积，每秒同步一次，默认是<span class="hljs-string">&quot;everysec&quot;</span>，按照速度和安全折中这是最好的<br> <br>slowlog-<span class="hljs-built_in">log</span>-slower-than <span class="hljs-number">10000</span><br>记录超过特定执行时间的命令。执行时间不包括I/O计算，比如连接客户端，返回结果等。只是命令执行时间，可以通过两个参数设置slow <span class="hljs-built_in">log</span>：一个是告诉Redis执行超过多少时间被记录的参数slowlog-<span class="hljs-built_in">log</span>-slower-than(微妙)，另一个是slow <span class="hljs-built_in">log</span> 的长度。<br>当一个新命令被记录的时候最早的命令将被从队列中移除，下面的时间以微妙微单位，因此<span class="hljs-number">1000000</span>代表一分钟。注意制定一个负数将关闭慢日志，而设置为<span class="hljs-number">0</span>将强制每个命令都会记录。<br> <br>hash-max-zipmap-entries <span class="hljs-number">512</span> &amp;&amp; hash-maxz-ipmap-value <span class="hljs-number">64</span><br>当hash中包含超过指定元素个数并且最大的元素没有超过临界时，hash将以一种特殊的编码方式(大大减少内存使用)来存储，这里可以设置这两个临界值。Redis Hash对应Value内部实际就是一个HashMap，实际这里会有<span class="hljs-number">2</span>种不同实现。这个Hash的成员比较少时redis为了节省内存会采用类似一维数组的方式来紧凑存储，而不会采用真正的HashMap结构，对应的value redisObject的encoding为zipmap。当成员数量增大时会自动转成真正的HashMap，此时encoding为ht。<br> <br>hash-max-zipmap-entries <span class="hljs-number">512</span> <span class="hljs-number">512</span><br><span class="hljs-built_in">list</span>数据类型多少节点以下会采用去指针的紧凑存储格式。<br> <br><span class="hljs-built_in">list</span>-max-ziplist-value <span class="hljs-number">64</span><br>数据类型节点值大小小于多少字节会采用紧凑存储格式。<br> <br>setmaxintsetentries <span class="hljs-number">512</span><br><span class="hljs-built_in">set</span>数据类型内部数据如果全部是数值型,且包含多少节点以下会采用紧凑格式存储。<br> <br>zsetmaxziplistentries <span class="hljs-number">128</span><br>zsort数据类型多少节点以下会采用去指针的紧凑存储格式。<br> <br>zsetmaxziplistvalue <span class="hljs-number">64</span><br>zsort数据类型节点值大小小于多少字节会采用紧凑存储格式。<br> <br>activerehashing yes<br>redis将在每<span class="hljs-number">100</span>毫秒时使用<span class="hljs-number">1</span>毫秒的CPU时间来对redis的hash表进行重新hash，可以降低内存的使用。<br>当你的使用场景中，有非常严格的实时性需要，不能够接受redis时不时的对请求有<span class="hljs-number">2</span>毫秒的延迟的话，把这项配置为no。如果没有这么严格的实时性要求，可以设置为yes，以便能够尽可能快的释放内存。<br></code></pre></td></tr></table></figure><h2 id="4、使用配置文件，启动容器"><a href="#4、使用配置文件，启动容器" class="headerlink" title="4、使用配置文件，启动容器"></a>4、使用配置文件，启动容器</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">docker run -p <span class="hljs-number">6379</span>:<span class="hljs-number">6379</span> --name redis6<span class="hljs-number">.2</span><span class="hljs-number">.6</span> -v /data/dockerData/redis/conf/redis.config:/etc/redis/redis.conf -v /data/dockerData/redis/data:/var/lib/redis -v /data/dockerData/redis/logs:/logs -d redis:<span class="hljs-number">6.2</span><span class="hljs-number">.6</span> redis-server /etc/redis/redis.conf<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/redis/%E5%90%AF%E5%8A%A8Docker%E5%AE%B9%E5%99%A8.png"><br>参数解析如下</p><table><thead><tr><th>参数</th><th>解析</th></tr></thead><tbody><tr><td>–privileged&#x3D;true</td><td>容器内的root拥有真正root权限，否则容器内root只是外部普通用户权限</td></tr><tr><td>-p</td><td>端口映射，此处映射主机6379端口到容器的6379端口</td></tr><tr><td>-v</td><td>主机和容器的目录映射关系，”:”前为主机目录，之后为容器目录</td></tr><tr><td>-v &#x2F;data&#x2F;dockerData&#x2F;redis&#x2F;conf&#x2F;redis.config:&#x2F;etc&#x2F;redis&#x2F;redis.config</td><td>新建配置文件书卷</td></tr><tr><td>-v &#x2F;data&#x2F;dockerData&#x2F;redis&#x2F;data:&#x2F;var&#x2F;lib&#x2F;redis</td><td>redis数据保存数据卷</td></tr><tr><td>-v &#x2F;data&#x2F;dockerData&#x2F;redis&#x2F;logs:&#x2F;logs</td><td>reids日志文数据卷</td></tr><tr><td>-d</td><td>表示使得容器后台一直运行</td></tr><tr><td>redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf</td><td>指定配置文件启动redis-server进程</td></tr><tr><td>–appendonly yes</td><td>开启数据持久化</td></tr><tr><td>–requirepass 密码</td><td>设置密码</td></tr></tbody></table><h2 id="5、测试是否正常进入Reids容器"><a href="#5、测试是否正常进入Reids容器" class="headerlink" title="5、测试是否正常进入Reids容器"></a>5、测试是否正常进入Reids容器</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">docker exec -it redis6<span class="hljs-number">.2</span><span class="hljs-number">.6</span> bash<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">redis-cli<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">auth <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/redis/%E8%BF%9B%E5%85%A5redis.png"></p><hr><h1 id="到此结束"><a href="#到此结束" class="headerlink" title="到此结束"></a>到此结束</h1>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker安装MySQL</title>
    <link href="/2024/10/12/Docker%E5%AE%89%E8%A3%85MySQL/"/>
    <url>/2024/10/12/Docker%E5%AE%89%E8%A3%85MySQL/</url>
    
    <content type="html"><![CDATA[<center><h1>Docker安装MySQL</h1></center><div class="note note-info">            <p>MySQL是什么？<br>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p><p>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><p>MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型和大型网站的开发都选择 MySQL 作为网站数据库。</p>          </div><h2 id="1、启动Docker服务"><a href="#1、启动Docker服务" class="headerlink" title="1、启动Docker服务"></a>1、启动Docker服务</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">systemctl start docker<br></code></pre></td></tr></table></figure><h2 id="2、拉取MySQL镜像，需要版本号，比如：8-0"><a href="#2、拉取MySQL镜像，需要版本号，比如：8-0" class="headerlink" title="2、拉取MySQL镜像，需要版本号，比如：8.0"></a>2、拉取MySQL镜像，需要版本号，比如：8.0</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">docker pull mysql:<span class="hljs-number">8.0</span><br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/mysql/%E6%8B%89%E5%8F%96mysql.png"></p><h2 id="3、查看拉取的镜像"><a href="#3、查看拉取的镜像" class="headerlink" title="3、查看拉取的镜像"></a>3、查看拉取的镜像</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">docker images<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/mysql/%E6%9F%A5%E7%9C%8Bdocker%E9%95%9C%E5%83%8F%E6%BA%90.png"></p><h2 id="4、建立容器的挂载文件"><a href="#4、建立容器的挂载文件" class="headerlink" title="4、建立容器的挂载文件"></a>4、建立容器的挂载文件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">mkdir -p /mydata/mysql/conf<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">mkdir -p /mydata/mysql/data<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">mkdir -p /mydata/mysql/logs<br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/mysql/%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9.png"></p><h2 id="5、创建配置文件"><a href="#5、创建配置文件" class="headerlink" title="5、创建配置文件"></a>5、创建配置文件</h2><p>创建配置文件命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">touch /mydata/mysql/conf/my.cnf<br></code></pre></td></tr></table></figure><p>编辑配置文件命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo gedit /mydata/mysql/conf/my.cnf<br></code></pre></td></tr></table></figure><p>my.cnf配置文件如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c">[client]<br><span class="hljs-keyword">default</span>-character-<span class="hljs-built_in">set</span>=utf8<br>[mysql]<br><span class="hljs-keyword">default</span>-character-<span class="hljs-built_in">set</span>=utf8<br>[mysqld]<br>user=mysql<br>character-<span class="hljs-built_in">set</span>-server=utf8<br>default_authentication_plugin=mysql_native_password <br></code></pre></td></tr></table></figure><p><img src="/img/ubuntu/docker/mysql/%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"><br><img src="/img/ubuntu/docker/mysql/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"></p><h2 id="6、根据镜像产生容器"><a href="#6、根据镜像产生容器" class="headerlink" title="6、根据镜像产生容器"></a>6、根据镜像产生容器</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">docker run --restart=always --privileged=<span class="hljs-literal">true</span> -p <span class="hljs-number">3306</span>:<span class="hljs-number">3306</span> --name mysql -v /mydata/mysql/<span class="hljs-built_in">log</span>:/var/<span class="hljs-built_in">log</span>/mysql -v /mydata/mysql/data:/var/lib/mysql -v /mydata/mysql/conf/my.cnf:/etc/mysql/my.cnf -v /mydata/mysql/conf/conf.d:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">1234</span> -d mysql:<span class="hljs-number">8.0</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解析</th></tr></thead><tbody><tr><td>–restart&#x3D;always</td><td>开机启动，这里不做设置</td></tr><tr><td>–privileged&#x3D;true</td><td>提升容器内权限，使容器内的root真正拥有root权限，否则容器内root只是外部普通用户权限</td></tr><tr><td>-p</td><td>将主机的 3306 端口映射到容器中的 3306 端口（主机端口 ：容器端口）</td></tr><tr><td>–name</td><td>指定容器名</td></tr><tr><td>-v</td><td>&#x2F;mydata&#x2F;mysql&#x2F;conf&#x2F;my.cnf:&#x2F;etc&#x2F;mysql&#x2F;my.cnf 把主机当前文件my.cnf挂在到容器中的&#x2F;etc&#x2F;mysql&#x2F;my.cnf文件，改mysql的配置只需要改动本机的my.cnf即可，其它同理</td></tr><tr><td>-e</td><td>设置环境，MYSQL_ROOT_PASSWORD&#x3D;1234 初始化root密码为 1234</td></tr><tr><td>-d</td><td>后台运行的镜像，mysql:tag ，并返回容器的 ID 或 名称</td></tr></tbody></table><p><img src="/img/ubuntu/docker/mysql/%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8.png"></p><h2 id="7、连接navicat连接mysql测试"><a href="#7、连接navicat连接mysql测试" class="headerlink" title="7、连接navicat连接mysql测试"></a>7、连接navicat连接mysql测试</h2><p>ip地址为ubuntu的IP地址<br>用户名：root<br>密码：1234<br><img src="/img/ubuntu/docker/mysql/navicat%E8%BF%9E%E6%8E%A5mysql.png"></p><hr><h1 id="到此结束"><a href="#到此结束" class="headerlink" title="到此结束"></a>到此结束</h1>]]></content>
    
    
    <categories>
      
      <category>Ubuntu</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL下载安装及环境配置</title>
    <link href="/2024/10/11/MySQL%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/10/11/MySQL%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<center><h1>MySQL下载安装及环境配置</h1></center><div class="note note-info">            <p>MySQL是什么？<br>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p><p>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><p>MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型和大型网站的开发都选择 MySQL 作为网站数据库。</p>          </div><h1 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h1><center><a class="btn" href="https://www.bilibili.com/video/BV1cF411379B" title="视频教程"><h3><font face="STCAIYUN" color=Red>点击跳转视频教程</font></h3></a></center><h1 id="下载教程"><a href="#下载教程" class="headerlink" title="下载教程"></a>下载教程</h1><p> <a href="https://www.mysql.com/">官网下载</a><br> 或者<a href="https://pan.baidu.com/s/1VxERrCZ6z6x3Teidm9cumg">度盘下载</a> 密码：73g8</p><h2 id="1、来到MySQL官网，点击DOWNLOADS"><a href="#1、来到MySQL官网，点击DOWNLOADS" class="headerlink" title="1、来到MySQL官网，点击DOWNLOADS"></a>1、来到<a href="https://www.mysql.com/">MySQL官网</a>，点击DOWNLOADS</h2><p><img src="/img/mysql/9e320d99d7b5f6ce12da8efe7509fa10.png"></p><h2 id="2、移动到最下方，点击右下方蓝色字体"><a href="#2、移动到最下方，点击右下方蓝色字体" class="headerlink" title="2、移动到最下方，点击右下方蓝色字体"></a>2、移动到最下方，点击右下方蓝色字体</h2><p><img src="/img/mysql/9a2f0ebbea8857e397b2cfbee13279a4.png"></p><h2 id="3、点击MySQL-Community-Server"><a href="#3、点击MySQL-Community-Server" class="headerlink" title="3、点击MySQL Community Server"></a>3、点击MySQL Community Server</h2><p><img src="/img/mysql/38feb5b6d5d007e10fefbe8ca4af8ec2.png"></p><h2 id="4、选择windows版本"><a href="#4、选择windows版本" class="headerlink" title="4、选择windows版本"></a>4、选择windows版本</h2><p><img src="/img/mysql/c6dc848296712bc162b23601d6a674ac.png"></p><h2 id="5、点击第一个Download进行下载（PS：第二个为测试版可能会出现各种问题）"><a href="#5、点击第一个Download进行下载（PS：第二个为测试版可能会出现各种问题）" class="headerlink" title="5、点击第一个Download进行下载（PS：第二个为测试版可能会出现各种问题）"></a>5、点击第一个Download进行下载（PS：第二个为测试版可能会出现各种问题）</h2><p><img src="/img/mysql/52b51cd795a424007d7a21d4f07f359a.png"></p><h2 id="6、点击开始下载"><a href="#6、点击开始下载" class="headerlink" title="6、点击开始下载"></a>6、点击开始下载</h2><p><img src="/img/mysql/cc921154eeed3e0eea7498f8dc4df33d.png"></p><h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><h2 id="1、解压下载好的Mysql压缩包，并进入"><a href="#1、解压下载好的Mysql压缩包，并进入" class="headerlink" title="1、解压下载好的Mysql压缩包，并进入"></a>1、解压下载好的Mysql压缩包，并进入</h2><p><img src="/img/mysql/b18f07a71392e531155e56308d7951a2.png"></p><h2 id="2、在加压好的Mysql目录下，创建data文件夹和my-ini文件（PS：创建txt文件，把后缀更改位ini即可）"><a href="#2、在加压好的Mysql目录下，创建data文件夹和my-ini文件（PS：创建txt文件，把后缀更改位ini即可）" class="headerlink" title="2、在加压好的Mysql目录下，创建data文件夹和my.ini文件（PS：创建txt文件，把后缀更改位ini即可）"></a>2、在加压好的Mysql目录下，创建data文件夹和my.ini文件（PS：创建txt文件，把后缀更改位ini即可）</h2><p><img src="/img/mysql/ad7b508077bc2160fd7c276ad975337f.png"></p><h2 id="3、右键my-ini文件，用记事本打开"><a href="#3、右键my-ini文件，用记事本打开" class="headerlink" title="3、右键my.ini文件，用记事本打开"></a>3、右键my.ini文件，用记事本打开</h2><p><img src="/img/mysql/1bdaa48bebd71ebf4e4abd19ca7a32c1.png"></p><h2 id="4、黏贴以下数据进刚刚打开的my-ini文件（PS-记得更改basedir和datadir，basedir为MySQL的位置，datadir为刚刚创建的data文件夹的位置）"><a href="#4、黏贴以下数据进刚刚打开的my-ini文件（PS-记得更改basedir和datadir，basedir为MySQL的位置，datadir为刚刚创建的data文件夹的位置）" class="headerlink" title="4、黏贴以下数据进刚刚打开的my.ini文件（PS:记得更改basedir和datadir，basedir为MySQL的位置，datadir为刚刚创建的data文件夹的位置）"></a>4、黏贴以下数据进刚刚打开的my.ini文件（PS:记得更改basedir和datadir，basedir为MySQL的位置，datadir为刚刚创建的data文件夹的位置）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c">[mysql]<br># 设置mysql客户端默认字符集<br><span class="hljs-keyword">default</span>-character-<span class="hljs-built_in">set</span>=utf8<br>[mysqld]<br># 设置<span class="hljs-number">3306</span>端口<br>port = <span class="hljs-number">3306</span><br># 设置mysql的安装目录<br>basedir = F:\Soft\Mysql\mysql<span class="hljs-number">-8.0</span><span class="hljs-number">.28</span>-winx64<br># 设置mysql数据库的数据的存放目录<br>datadir = F:\Soft\Mysql\mysql<span class="hljs-number">-8.0</span><span class="hljs-number">.28</span>-winx64\data<br># 允许最大连接数<br>max_connections=<span class="hljs-number">20</span><br># 服务端使用的字符集默认为<span class="hljs-number">8</span>比特编码的latin1字符集<br>character-<span class="hljs-built_in">set</span>-server=utf8<br># 创建新表时将使用的默认存储引擎<br><span class="hljs-keyword">default</span>-storage-engine=INNODB<br># 创建模式<br>sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES<br></code></pre></td></tr></table></figure><p><img src="/img/mysql/a87a91273d9773c5c7ba6ac9a0fdfc7a.png"></p><h2 id="5、以管理员权限打开CMD（PS：不是以管理员身份打开，后面操作会报错）"><a href="#5、以管理员权限打开CMD（PS：不是以管理员身份打开，后面操作会报错）" class="headerlink" title="5、以管理员权限打开CMD（PS：不是以管理员身份打开，后面操作会报错）"></a>5、以管理员权限打开CMD（PS：不是以管理员身份打开，后面操作会报错）</h2><p><img src="/img/mysql/dd8e52d41f1cd514525849a8461ee5a8.png"></p><h2 id="6、切换到MySQL的bin目录下（PS：需要先切盘，比如我的在F盘，就输入f-回车，再输入MySQL的bin路径，其它盘类似操作即可）"><a href="#6、切换到MySQL的bin目录下（PS：需要先切盘，比如我的在F盘，就输入f-回车，再输入MySQL的bin路径，其它盘类似操作即可）" class="headerlink" title="6、切换到MySQL的bin目录下（PS：需要先切盘，比如我的在F盘，就输入f: 回车，再输入MySQL的bin路径，其它盘类似操作即可）"></a>6、切换到MySQL的bin目录下（PS：需要先切盘，比如我的在F盘，就输入f: 回车，再输入MySQL的bin路径，其它盘类似操作即可）</h2><p><img src="/img/mysql/9126d017244144afdfc111401e9403d2.png"></p><h2 id="7、初始化、安装、启动数据库，并修改密码（下面有效果图片）"><a href="#7、初始化、安装、启动数据库，并修改密码（下面有效果图片）" class="headerlink" title="7、初始化、安装、启动数据库，并修改密码（下面有效果图片）"></a>7、初始化、安装、启动数据库，并修改密码（下面有效果图片）</h2><p>初始化数据库（PS：“root@localhost: ”后面为数据库的初始化密码，记得复制保存）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">mysqld --initialize --console<br></code></pre></td></tr></table></figure><p>数据库安装</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">mysqld --install mysql<br></code></pre></td></tr></table></figure><p>数据库启动</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">net start mysql<br></code></pre></td></tr></table></figure><p>用root权限进入数据库管理端（PS：输入“root@localhost: ”后面的初始化密码，直接复制黏贴即可）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">mysql -u root -p<br></code></pre></td></tr></table></figure><p>修改数据库密码 ‘123456’ 改为你想要的密码，如: ‘zejsz’</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">alter user <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="/img/mysql/3c7801ee4a4152cd517915f67de50292.png"></p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="1、选择此电脑，右键，选择属性"><a href="#1、选择此电脑，右键，选择属性" class="headerlink" title="1、选择此电脑，右键，选择属性"></a>1、选择此电脑，右键，选择属性</h2><p><img src="/img/mysql/02aba379bc2c3d8c99ac757ac27db037.png"></p><h2 id="2、点击高级系统设置–》点击环境变量"><a href="#2、点击高级系统设置–》点击环境变量" class="headerlink" title="2、点击高级系统设置–》点击环境变量"></a>2、点击高级系统设置–》点击环境变量</h2><p><img src="/img/mysql/aa33c60add4a531e7b0606a05a6df2ef.png"><br><img src="/img/mysql/17f50938abeeee1fc105623f7b8c6a64.png"></p><h2 id="3、点击新建，变量名为MYSQL-HOME，变量值为MySQL的目录，点击确定"><a href="#3、点击新建，变量名为MYSQL-HOME，变量值为MySQL的目录，点击确定" class="headerlink" title="3、点击新建，变量名为MYSQL_HOME，变量值为MySQL的目录，点击确定"></a>3、点击新建，变量名为MYSQL_HOME，变量值为MySQL的目录，点击确定</h2><p><img src="/img/mysql/af8462420da6cc988fe793d4f64df61d.png"></p><h2 id="4、选择Path变量，点击编辑"><a href="#4、选择Path变量，点击编辑" class="headerlink" title="4、选择Path变量，点击编辑"></a>4、选择Path变量，点击编辑</h2><p><img src="/img/mysql/220b1d769d887fa2db0743ce9c1a5b31.png"></p><h2 id="5、点击新建，输入-MYSQL-HOME-bin，所有弹框点击确定（PS：所有弹框一定要确定才可以）"><a href="#5、点击新建，输入-MYSQL-HOME-bin，所有弹框点击确定（PS：所有弹框一定要确定才可以）" class="headerlink" title="5、点击新建，输入%MYSQL_HOME%\bin，所有弹框点击确定（PS：所有弹框一定要确定才可以）"></a>5、点击新建，输入%MYSQL_HOME%\bin，所有弹框点击确定（PS：所有弹框一定要确定才可以）</h2><p><img src="/img/mysql/5a3427968f2d1e5a2eaffb1a8aba6d3d.png"></p><hr><h1 id="到此MySQL的下载、安装及环境配置就结束了"><a href="#到此MySQL的下载、安装及环境配置就结束了" class="headerlink" title="到此MySQL的下载、安装及环境配置就结束了"></a>到此MySQL的下载、安装及环境配置就结束了</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_46607249/article/details/127190324">我的博客文章：MySQL下载安装及环境配置（图文教程，超详细）</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.bilibili.com/video/BV1cF411379B">我的视频教程：MySQL下载安装及环境配置</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git安装及配置</title>
    <link href="/2024/10/07/Git%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/10/07/Git%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h5>第一步：下载Git</h5><div class="note note-info">            <p>Git官方下载：<a href="https://git-scm.com/download/win/">https://git-scm.com/download/win/</a><br>蓝奏盘下载：<a href="https://wwuk.lanzouo.com/b0nyiqi0f">https://wwuk.lanzouo.com/b0nyiqi0f</a><br>密码:1cs0</p>          </div><h5>第二步：Git安装</h5><h5>第三步：查看Git版本，确认Git安装成功</h5><div class="note note-info">            <p>cmd查看Git版本：git –version</p>          </div><h5>第四步：打开git bash配置用户名和邮箱（用户名和邮箱随便设置就可以）</h5><div class="note note-info">            <p>git config –global user.name zejsz<br>git config –global user.email <a href="mailto:&#122;&#x65;&#x6a;&#115;&#x7a;&#x40;&#x31;&#54;&#51;&#46;&#99;&#x6f;&#x6d;">&#122;&#x65;&#x6a;&#115;&#x7a;&#x40;&#x31;&#54;&#51;&#46;&#99;&#x6f;&#x6d;</a></p>          </div><h5>第五步：查看是否配置成功</h5><div class="note note-info">            <p>git config user.name<br>git config user.email</p>          </div>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
